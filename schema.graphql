# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DealDTO {
  dealPrice: Float!
  dealQuantity: Int!
  id: ID!
  product: ProductDTO!
}

type DealPaginatedType {
  items: [DealDTO!]!
  meta: PaginationMeta!
}

enum DealSortChoices {
  DEAL_PRICE
  PRODUCT_NAME
  PRODUCT_PRICE
  SHOP_NAME
}

type Mutation {
  addPasskey(registration: String!): Boolean!
  loginUser(authentication: String!): Boolean!
  logoutUser: Boolean!
  registerUser(registration: String!): Boolean!
  resolveUnknownDeal: Boolean!
  startScraper(name: String!): Boolean!
}

enum Order {
  ASCENDING
  DESCENDING
}

type PaginationMeta {
  currentPage: Int!
  itemCount: Int!
  itemsPerPage: Int!
  totalItems: Int
  totalPages: Int
}

type ProductDTO {
  id: ID!
  imageUrl: String!
  name: String!
  price: Float!
  productUrl: String!
  shop: ShopDTO!
}

type Query {
  challenge: String!
  deal(id: ID!): DealDTO
  deals(limit: Int = 10, order: Order = ASCENDING, page: Int = 1, sort: [DealSortChoices!] = [PRODUCT_NAME]): DealPaginatedType!
  service(id: ID!): ServiceHealthDTO
  services: [ServiceHealthDTO!]!
  session: SessionDTO!
  unknownDeals: [UnknownDealDTO!]!
  user(id: String): UserDTO
  users: [UserDTO!]!
}

type ServiceHealthDTO {
  id: ID!
  name: String!
  queue: String!
  status: StatusDTO!
  type: ServiceType!
}

enum ServiceType {
  CORE
  SCRAPER
}

type SessionDTO {
  user: String
}

type ShopDTO {
  id: ID!
  name: String!
}

type StatusDTO {
  status: String!
  uptime: Float
}

type UnknownDealDTO {
  deal: String!
  id: ID!
  productUrl: String!
  shop: ShopDTO!
}

type UserDTO {
  id: ID!
  isAdmin: Boolean!
  username: String!
}